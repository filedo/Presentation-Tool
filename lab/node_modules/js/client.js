// サーバからのメッセージに対してクライアントが行う機能をまとめた関数
$(function(){
	// json.txtの情報からページを復元する
	socket.on('reload_from_server',function(jsonData){
		reload(jsonData);
	});

	// question.txtファイルからアンケートの集計を行う
	// answerList:question.txtの中身をカンマで区切ったリスト
	// choiceNum:アンケートの選択肢の数
	socket.on('count_from_server',function(answerList,choiceNum){
		count(answerList,choiceNum);
		// アンケートの集計が終わるとquestion.txtは削除される
		socket.emit('rmQuestionFile_from_client');
	});

	// アンケートの集計ダイアログを表示する
	socket.on('countDialog_from_server',function(){
		$('#countDialog').dialog("open");
	});

	// チャットの内容をlogsに追加
	socket.on('emit_from_server',function(data){
		$('#logs').append($('<li>').text(data));
	});

	// スライドに使う画像をslideに追加
	// length:スライドに使う画像のファイル数
	// extname:拡張子名
	socket.on('slideload_from_server',function(length,extname){
		slideLoad(length,extname);
	});

	// 最後の要素をslideの先頭に追加（移動）させる
	socket.on('nextpage_from_server',function(){
		nextPage();
	});
	// 最初の要素をslideの末尾に追加（移動）させる
	socket.on('prepage_from_server',function(){
		prependPage();
	});

	// 発表者として登録する
	// 入力したユーザ名がcookieとサーバに登録される
	socket.on('register_from_server',function(){
		var user = confirm("あなたを発表者として登録しますか？");
		if(user){
			var id = window.prompt("ユーザ名を入力してください", "");
			// cookieに入力したユーザ名を登録
			setCookie('sw_javascriptauth_password', id);
			// サーバに入力したユーザ名をusername.txtとして登録
			socket.emit('registered_from_client',id);
			// 登録後、ページを再読み込みする
			location.reload();
		}
	});
	// 発表者特有の機能が使えるようになる
	socket.on('presenter_from_server',function(){
		$('body').find('.presenterTools').css('visibility', 'visible');
		presenter = true;
		alert(getCookie('sw_javascriptauth_password')+"さんが発表者です。");
	});
	// 発表者の権限を解除されるとalertが表示される
	socket.on('release_from_server',function(){
	//	location.reload();
	//	alert(getCookie('sw_javascriptauth_password')+"さんは発表者ではなくなりました。");
	});
});