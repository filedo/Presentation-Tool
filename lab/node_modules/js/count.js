// アンケートの結果を集計し、D3.jsを用いてブラウザに棒グラフとして描画する
function count(answerList,choiceNum){
	var numbers = new Array(9);
	for(var i = 0;i < numbers.length;i++){
		numbers[i] = 0;
	}

	// アンケートの集計
	for(var i = 0;i < answerList.length;i++){
		var number = answerList[i];
		switch(number){
			case '1': numbers[0]++;
			break;
			case '2': numbers[1]++;
			break;
			case '3': numbers[2]++;
			break;
			case '4': numbers[3]++;
			break;
			case '5': numbers[4]++;
			break;
			case '6': numbers[5]++;
			break;
			case '7': numbers[6]++;
			break;
			case '8': numbers[7]++;
			break;
			case '9': numbers[8]++;
			break;
		}
	}

	var dataset = [];
	// 集計した結果をdatasetに格納
	// 選択肢が9択だった場合の例: var dataset = [{name: 1, count: numbers[0]},...{name: 9, count: numbers[8]}];
	for(var i=1;i<=choiceNum;i++){
		var data = {name: i, count: numbers[i-1]};
		dataset.push(data);
	}

	// 選択肢の数分だけ棒グラフを生成する
	var scaleX = d3.scale.linear()
        .domain([0, dataset.length]).range([0, 600]);
    var scaleY = d3.scale.linear()
        .domain([0, d3.max(dataset, function(d){return d.count;})]).range([0,180]);
    //カンバスの定義
    var canvas = d3.select("#countDialog");
    var svg = canvas.append("svg")
        .attr("width",550).attr("height",200)
        .attr("shape-rendering", "crispEdges");    //アンチエイリアスを無効にする．
    //データ駆動のドローイング
    //棒グラフ部
    svg.selectAll("rect")
        .data(dataset).enter().append("rect")
        .attr("x", function(d, i){return scaleX(i) + 25/dataset.length})
        .attr("y", function(d, i){return 190 - scaleY(d.count)})
        .attr("width", function(d, i){return 150/dataset.length})
        .attr("height", function(d, i){return scaleY(d.count)})
        .attr("fill", "blue");
    //名前の出力
    svg.selectAll("text.name")//便宜上クラスを設定しているが，ここでは特に意味はない．
        .data(dataset).enter().append("text")
        .attr("x", function(d, i){return scaleX(i) + 100/dataset.length})
        .attr("y", function(d, i){return 200})
        .attr("text-anchor", "end")
        .attr("font-weight", "bold")
        .attr("font-family", "selif")
        .text(function(d, i){return d.name})
        .attr("fill", "black");
    //点数の出力
    svg.selectAll("text.count")//上でのtext要素の挿入結果を無視するためにクラスを追加している．
        .data(dataset).enter().append("text")
        .attr("x", function(d, i){return scaleX(i) + 100/dataset.length})
        .attr("y", function(d, i){return 210 - scaleY(d.count)})
        .attr("text-anchor", "middle")
        .attr("font-weight", "bold")
        .attr("font-family", "selif")
        .text(function(d, i){return d.count})
        .attr("fill", "white");
}